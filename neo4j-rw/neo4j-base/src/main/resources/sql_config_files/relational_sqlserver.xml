<?xml version="1.0" encoding="utf-8"?>

<sql>

    <getTables type="NODE" workName="同步表" seq="1" nodeName="表" label="resource.relational.tableEntity" columns="moiName,moiCreateDate,moiUpdateDate,guid,tableRows,dataLength,updateTime,comment">
        <![CDATA[

                SELECT
                    LOWER(t1.name) as moiName,
                    replace(convert(varchar(8), t1.create_date, 112)+convert(varchar(8), t1.create_date, 114), ':','')  as moiCreateDate, -- 需要日期转换
                    replace(convert(varchar(8), t1.modify_date, 112)+convert(varchar(8), t1.modify_date, 114), ':','')  as moiUpdateDate, -- 需要日期转换
                    ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t2.Name) + ';' + LOWER(t1.name)) as guid ,
                    (select sum(rows) from sys.partitions p where p.object_id = t1.object_id) AS tableRows,
                    (select  SUM(a.total_pages) * 8 * 1024.0  from sys.allocation_units a
                     left join sys.partitions p on p.partition_id = a.container_id where p.OBJECT_ID = t1.object_id) AS dataLength,
                    replace(convert(varchar(8), t1.modify_date, 112)+convert(varchar(8), t1.modify_date, 114), ':','') as updateTime,
                    t5.value  as  comment
                FROM
                    sys.tables t1
                    left join sys.schemas t2 on t1.schema_id = t2.schema_id
                    left join sysobjects t on t1.object_id = t.id
                    left join sys.extended_properties t5 on t5.major_id = t.id
                                                        and t5.name = 'MS_Description'
                                                        and t5.minor_id = 0
                    where t2.name = '${param.schema}' and
                     t1.is_ms_shipped = 0 -- 表示是用户创建的表
                 and t1.OBJECT_ID > 0
                 order by t1.name

		]]>
    </getTables>


    <getTableColumn type="NODE" workName="同步表字段" seq="2" nodeName="表字段" label="resource.relational.columnEntity" sourceLabel="resource.relational.tableEntity" columns="moiCreateDate,moiUpdateDate,moiName,columnId,moiSeq,isNullable,sqlSimpleType,length,precision,scale,characterSetName,guid,comment">
        <![CDATA[
                	SELECT
                        t2.createTime as moiCreateDate,
                        t2.updateTime as moiUpdateDate,
                        LOWER(t1.COLUMN_NAME) AS moiName,
                        t1.ORDINAL_POSITION as columnId,
                        t1.ORDINAL_POSITION as moiSeq,
                        t1.IS_NULLABLE AS isNullable,
                        t1.DATA_TYPE as sqlSimpleType,
                        t1.CHARACTER_MAXIMUM_LENGTH AS length,
                        t1.NUMERIC_PRECISION AS precision,
                        t1.NUMERIC_SCALE as scale,
                        t1.CHARACTER_SET_NAME AS characterSetName,
                        ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t1.TABLE_SCHEMA) + ';' + LOWER(t1.TABLE_NAME) + ';' + LOWER(t1.COLUMN_NAME) ) as guid,
                        t2.column_description as comment
                    FROM INFORMATION_SCHEMA.COLUMNS t1 left join
                 (
                 SELECT
                    LOWER(t1.name) as tableName,
                    db_name() as dbName,
                    LOWER(t2.name) as schemaName,
					LOWER(B.name) as columnName,
                    replace(convert(varchar(8), t1.create_date, 112)+convert(varchar(8), t1.create_date, 114), ':','')  as createTime,
                    replace(convert(varchar(8), t1.modify_date, 112)+convert(varchar(8), t1.modify_date, 114), ':','')  as updateTime,
                        cp.value AS column_description
                FROM
                    sys.tables t1
                    left join sys.schemas t2 on t1.schema_id = t2.schema_id
                    left JOIN sys.columns B ON B.object_id = t1.object_id
                    LEFT JOIN sys.extended_properties cp ON cp.major_id = B.object_id
                    AND cp.minor_id = B.column_id
                    where t2.name = '${param.schema}' and
                     t1.is_ms_shipped = 0
                 and t1.OBJECT_ID > 0
                 ) t2 on t1.TABLE_CATALOG = t2.dbName and LOWER(t1.TABLE_NAME) = t2.tableName and LOWER(t1.TABLE_SCHEMA) = t2.schemaName and LOWER(t1.COLUMN_NAME) = t2.columnName
                 where t1.TABLE_SCHEMA = '${param.schema}'
                 order by ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + t1.TABLE_SCHEMA + ';' + t1.TABLE_NAME + ';' + t1.COLUMN_NAME )
		]]>
    </getTableColumn>

    <getView type="NODE" workName="同步表视图" seq="3" nodeName="视图" label="resource.relational.viewEntity" columns="moiName,guid,sql">
        -- 视图加密的情况下，view_definition 为空
        SELECT
        LOWER(infov.TABLE_NAME) as moiName,
            ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(infov.TABLE_SCHEMA) + ';' + LOWER(infov.TABLE_NAME) ) as guid,
            infov.VIEW_DEFINITION AS sql
        FROM
            INFORMATION_SCHEMA.VIEWS infov
            LEFT JOIN sys.views sysv ON infov.TABLE_NAME= sysv.name
            AND infov.TABLE_SCHEMA= (
                SELECT
                     name
            FROM
                sys.schemas
            WHERE
                schema_id = sysv.schema_id
            )
            WHERE sysv.type= 'V' and infov.TABLE_SCHEMA =  '${param.schema}' order by  infov.TABLE_NAME
    </getView>

    <getSQLIndexes type="NODE" workName="同步表索引" seq="4" nodeName="索引" label="resource.relational.sQLIndexEntity" columns="guid,moiName,type">
        <![CDATA[

	      SELECT
             ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t3.Name) + ';' + LOWER(t1.name) + '_' + LOWER(t2.name)) as guid ,
            LOWER(t2.name) as moiName,
            t1.type_desc as type
        FROM
            sys.indexes t1
            JOIN sys.tables t2 ON t1.object_id = t2.object_id AND is_hypothetical = 0 AND t1.index_id > 0
        left join sys.schemas t3 on t2.schema_id = t3.schema_id
        where t3.Name =  '${param.schema}' order by  t2.name

	    ]]>
    </getSQLIndexes>

    <getViewColumn type="NODE" workName="同步视图字段" seq="5" nodeName="视图字段" label="resource.relational.columnEntity" sourceLabel="resource.relational.viewEntity"  columns="moiName,columnId,moiSeq,isNullable,sqlSimpleType,length,precision,scale,characterSetName,guid">
        SELECT
        LOWER(t1.COLUMN_NAME) AS moiName,
            t1.ORDINAL_POSITION as columnId,
            t1.ORDINAL_POSITION as moiSeq,
            t1.IS_NULLABLE AS isNullable,
            t1.DATA_TYPE as sqlSimpleType,
            t1.CHARACTER_MAXIMUM_LENGTH AS length,
            t1.NUMERIC_PRECISION AS precision,
            t1.NUMERIC_SCALE as scale,
            t1.CHARACTER_SET_NAME AS characterSetName,
            ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t1.TABLE_SCHEMA) + ';' + LOWER(t1.TABLE_NAME) + ';' + LOWER(t1.COLUMN_NAME) ) as guid
        FROM INFORMATION_SCHEMA.COLUMNS t1 left join
        (
        SELECT
            db_name() as dbName,
        LOWER(t3.name) as schemaName,
        LOWER(t1.name) as viewName,
        LOWER(t2.name) as columnName
        FROM
        sys.views t1
            JOIN sys.columns t2 ON t1.object_id = t2.object_id
            join sys.schemas t3 on t3.schema_id = t1.schema_id
        ) t2 on t1.TABLE_CATALOG = t2.dbName and LOWER(t1.TABLE_NAME) = t2.viewName and LOWER(t1.TABLE_SCHEMA) = t2.schemaName
        where t1.TABLE_SCHEMA = '${param.schema}' order by  ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + t1.TABLE_SCHEMA + ';' + t1.TABLE_NAME + ';' + t1.COLUMN_NAME )
    </getViewColumn>




    <getSchemasToView type="RELATIONSHIP" workName="同步Schema->视图的关系" seq="6" label="resource.relational.schemaToViewEntity" srcLabel="resource.relational.schemaEntity" targetLabel="resource.relational.viewEntity">
        SELECT
        ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(infov.TABLE_SCHEMA)) as sourceGuid,
        ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(infov.TABLE_SCHEMA) + ';' + LOWER(infov.TABLE_NAME) ) targetGuid
        FROM
        INFORMATION_SCHEMA.VIEWS infov
        LEFT JOIN sys.views sysv ON infov.TABLE_NAME= sysv.name
        AND infov.TABLE_SCHEMA= (
        SELECT
        name
        FROM
        sys.schemas
        WHERE
        schema_id = sysv.schema_id
        )
        WHERE sysv.type= 'V' and infov.TABLE_SCHEMA =  '${param.schema}'
    </getSchemasToView>

    <getViewToColumn type="RELATIONSHIP" workName="同步视图->视图字段的关系" seq="7" label="resource.relational.viewToColumnEntity" srcLabel="resource.relational.viewEntity" targetLabel="resource.relational.columnEntity">
        SELECT
        ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t1.TABLE_SCHEMA) + ';' + LOWER(t1.TABLE_NAME) ) as sourceGuid,
        ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t1.TABLE_SCHEMA) + ';' + LOWER(t1.TABLE_NAME) + ';' + LOWER(t1.COLUMN_NAME) ) as targetGuid
        FROM INFORMATION_SCHEMA.COLUMNS t1 left join
        (
        SELECT
        db_name() as dbName,
        LOWER(t3.name) as schemaName,
        LOWER(t1.name) as viewName,
        LOWER(t2.name) as columnName
        FROM
        sys.views t1
        JOIN sys.columns t2 ON t1.object_id = t2.object_id
        join sys.schemas t3 on t3.schema_id = t1.schema_id
        ) t2 on t1.TABLE_CATALOG = t2.dbName and LOWER(t1.TABLE_NAME) = t2.viewName and LOWER(t1.TABLE_SCHEMA) = t2.schemaName
        where t1.TABLE_SCHEMA = '${param.schema}'
    </getViewToColumn>



    <getSchemasToTable type="RELATIONSHIP" workName="同步Schema->表的关系" seq="8"  label="resource.relational.schemaToTableEntity" srcLabel="resource.relational.schemaEntity" targetLabel="resource.relational.tableEntity" >

        SELECT
            ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t2.Name)) as sourceGuid ,
            ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t2.Name) + ';' + LOWER(t1.name)) as targetGuid
        FROM
            sys.tables t1
        left join sys.schemas t2 on t1.schema_id = t2.schema_id
        left join sysobjects t on t1.object_id = t.id
        left join sys.extended_properties t5 on t5.major_id = t.id
            and t5.name = 'MS_Description'
            and t5.minor_id = 0
        where
            t2.name = '${param.schema}' and
            t1.is_ms_shipped = 0 -- 表示是用户创建的表
            and t1.OBJECT_ID > 0

    </getSchemasToTable>

    <getTableToColumn type="RELATIONSHIP" workName="同步表->字段的关系" seq="9" label="resource.relational.tableToColumnEntity" srcLabel="resource.relational.tableEntity" targetLabel="resource.relational.columnEntity" >
        SELECT
            ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t1.TABLE_SCHEMA) + ';' + LOWER(t1.TABLE_NAME)  ) as sourceGuid,
            ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t1.TABLE_SCHEMA) + ';' + LOWER(t1.TABLE_NAME) + ';' + LOWER(t1.COLUMN_NAME) ) as targetGuid
        FROM INFORMATION_SCHEMA.COLUMNS t1 left join
        (
        SELECT
        LOWER(t1.name) as tableName,
            db_name() as dbName,
        LOWER(t2.name) as schemaName,
        LOWER(B.name) as columnName,
        replace(convert(varchar(8), t1.create_date, 112)+convert(varchar(8), t1.create_date, 114), ':','')  as createTime,
            replace(convert(varchar(8), t1.modify_date, 112)+convert(varchar(8), t1.modify_date, 114), ':','')  as updateTime,
            cp.value AS column_description
        FROM
            sys.tables t1
        left join sys.schemas t2 on t1.schema_id = t2.schema_id
        left JOIN sys.columns B ON B.object_id = t1.object_id
        LEFT JOIN sys.extended_properties cp ON cp.major_id = B.object_id
            AND cp.minor_id = B.column_id
        where
            t2.name = '${param.schema}' and
            t1.is_ms_shipped = 0
            and t1.OBJECT_ID > 0
        ) t2 on t1.TABLE_CATALOG = t2.dbName and LOWER(t1.TABLE_NAME) = t2.tableName and LOWER(t1.TABLE_SCHEMA) = t2.schemaName and LOWER(t2.columnName) = t1.COLUMN_NAME
        where t1.TABLE_SCHEMA = '${param.schema}'
        order by ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + t1.TABLE_SCHEMA + ';' + t1.TABLE_NAME + ';' + t1.COLUMN_NAME )
    </getTableToColumn>


    <getSchemasToSqlIndex type="RELATIONSHIP" workName="同步Schema->索引的关系" seq="10" label="resource.relational.schemaToSQLIndexEntity" srcLabel="resource.relational.schemaEntity" targetLabel="resource.relational.sQLIndexEntity">
        SELECT
            ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t3.Name)) as sourceGuid ,
            ('${param.systemId}' + ';' + '${param.env}' + ';' + '数据字典' + ';' + '${param.importName}' + ';' + LOWER(t3.Name) + ';' + LOWER(t1.name) + '_' + LOWER(t2.name)) as targetGuid
        FROM
        sys.indexes t1
        JOIN sys.tables t2 ON t1.object_id = t2.object_id AND is_hypothetical = 0 AND t1.index_id > 0
        left join sys.schemas t3 on t2.schema_id = t3.schema_id
        where t3.Name =  '${param.schema}'
    </getSchemasToSqlIndex>

<!--    <getSqlIndexToColumn type="RELATIONSHIP" workName="同步索引->字段的关系" seq="11" label="resource.relational.sQLIndexToColumnEntity" srcLabel="resource.relational.sQLIndexEntity" targetLabel="resource.relational.columnEntity">-->
<!--        select-->
<!--        CONCAT('${param.systemId}',';','${param.env}',';','数据字典',';',table_schema,';',table_schema,';',index_name,'_',table_name) as sourceGuid,-->
<!--        CONCAT('${param.systemId}',';','${param.env}',';','数据字典',';',table_schema,';',table_schema,';',table_name,';',column_name) as targetGuid-->
<!--        from information_schema.statistics-->
<!--        where index_schema = '${param.schema}'-->
<!--    </getSqlIndexToColumn>-->

</sql>